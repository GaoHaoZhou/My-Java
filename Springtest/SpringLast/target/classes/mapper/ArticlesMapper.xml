<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.glp.mapper.ArticlesMapper">
  <resultMap id="BaseResultMap" type="com.glp.model.Articles">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="cover_image" jdbcType="VARCHAR" property="coverImage" />
    <result column="author_id" jdbcType="INTEGER" property="authorId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="body" jdbcType="VARCHAR" property="body" />
    <result column="published_at" jdbcType="TIMESTAMP" property="publishedAt" />
    <association property="user" resultMap="com.glp.mapper.UsersMapper.BaseResultMap" columnPrefix="prefix_users_"/>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from articles
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.glp.model.Articles">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into articles (cover_image, author_id, title, 
      body, published_at)
    values (#{coverImage,jdbcType=VARCHAR}, #{authorId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{body,jdbcType=VARCHAR}, #{publishedAt,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.glp.model.Articles">
    update articles
    set cover_image = #{coverImage,jdbcType=VARCHAR},
      author_id = #{authorId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      body = #{body,jdbcType=VARCHAR},
      published_at = #{publishedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select a.id, a.cover_image, a.author_id, a.title, a.body, a.published_at, u.id prefix_users_id, u.nickname prefix_users_nickname,
    u.brief prefix_users_brief
    from articles a join users u on a.author_id = u.id
    where a.id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, cover_image, author_id, title, body, published_at
    from articles
  </select>

  <select id="queryByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, cover_image, author_id, title, body, published_at
    from articles
    where author_id = #{id,jdbcType=INTEGER}
  </select>
</mapper>